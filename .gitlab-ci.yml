stages:
    - build-libvlc
    - build-unity-plugin

variables:
    VLC_UWP_LLVM_IMAGE: registry.videolan.org/vlc-debian-llvm-uwp:20211020111246
    VLC_WIN_LLVM_IMAGE: registry.videolan.org/vlc-debian-llvm-mingw:20220819151034
    VLC_DEBIAN_IMAGE: registry.videolan.org/vlc-debian-unstable:20210803114245
    VLC_ANDROID_IMAGE: registry.videolan.org/vlc-debian-android:20220728132611

.variables-trial: &variables-trial
    ARGS_TRIAL: -t

.base-template:
    tags:
        - docker
        - amd64
    stage: build-libvlc
    artifacts:
        paths:
            - nightlies/*
        expire_in: 2 weeks

# ANDROID

.variables-android-armv7: &variables-android-armv7
        ANDROID_ABI: armeabi-v7a

.variables-android-armv8: &variables-android-armv8
        ANDROID_ABI: arm64-v8a

.variables-android-x86: &variables-android-x86
        ANDROID_ABI: x86

.variables-android-x86_64: &variables-android-x86_64
        ANDROID_ABI: x86_64

.libvlc-android-common:
    extends: .base-template
    image:
        name: $VLC_ANDROID_IMAGE
    script: |
        git clone https://code.videolan.org/videolan/vlc-android && cd vlc-android
        git clone https://code.videolan.org/videolan/vlc/ --depth=1
        git clone https://code.videolan.org/videolan/libvlcjni && cd libvlcjni
        git apply ../../patches/disable-rav1e.patch
        git apply ../../patches/no-libvlcjni-build.patch
        cd ..
        ./buildsystem/compile.sh -l -b -r -a ${ANDROID_ABI}
    after_script:
        - mkdir nightlies
        - cp vlc-android/libvlcjni/libvlc/jni/libs/${ANDROID_ABI}/libvlc.so nightlies
        - cp vlc-android/libvlcjni/libvlc/jni/libs/${ANDROID_ABI}/libc++_shared.so nightlies
        - cp vlc-android/libvlcjni/libvlc/build/intermediates/aar_main_jar/release/classes.jar nightlies

.unity-android-common:
    extends: .base-template
    image:
        name: $VLC_ANDROID_IMAGE
    stage: build-unity-plugin
    script:
        - mkdir -p Assets/VLCUnity/Plugins/Android/libs/${ANDROID_ABI}
        - mv nightlies/* Assets/VLCUnity/Plugins/Android/libs/${ANDROID_ABI}
        - ./build.sh -p android -a ${ANDROID_ABI} -r ${ARGS_TRIAL}
    after_script:
        - cp -r Assets/VLCUnity/Plugins/Android/libs/${ANDROID_ABI} nightlies

# libvlc android

libvlc-android-armv7:
    extends: .libvlc-android-common
    variables: *variables-android-armv7

libvlc-android-armv8:
    extends: .libvlc-android-common
    variables: *variables-android-armv8

libvlc-android-x86:
    extends: .libvlc-android-common
    variables: *variables-android-x86

libvlc-android-x86_64:
    extends: .libvlc-android-common
    variables: *variables-android-x86_64

# unity android

unity-android-armv7:
    extends: .unity-android-common
    variables: *variables-android-armv7
    dependencies:
      - libvlc-android-armv7

unity-android-armv8:
    extends: .unity-android-common
    variables: *variables-android-armv8
    dependencies:
      - libvlc-android-armv8

unity-android-x86:
    extends: .unity-android-common
    variables: *variables-android-x86
    dependencies:
      - libvlc-android-x86

unity-android-x86_64:
    extends: .unity-android-common
    variables: *variables-android-x86_64
    dependencies:
      - libvlc-android-x86_64

unity-android-armv7-trial:
    extends: .unity-android-common
    variables:
      <<: [*variables-android-armv7, *variables-trial]
    dependencies:
      - libvlc-android-armv7

# Windows Classic

.libvlc-win-common:
    tags:
        - docker
        - amd64
    stage: build-libvlc
    script:
        - git clone https://code.videolan.org/videolan/vlc/ && cd vlc
        - wget -O disable-activex.patch https://code.videolan.org/-/snippets/1304/raw
        - git apply disable-activex.patch
        - extras/package/win32/build.sh $ARGS
    after_script:
        - mkdir nightlies
        - ls ./vlc/win64
        - cd ./vlc/$BUILD_FOLDER
        - make package-win-strip
        - ls vlc-4.0.0-dev
        - rm -rf vlc-4.0.0-dev/lua/http
        - 7z a -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on $ARTIFACT $OUTPUT
        - cp $ARTIFACT ../../nightlies
    artifacts:
        paths:
            - nightlies/*
        expire_in: 2 weeks
    variables:
        WINE_SDK_PATH: /usr/include/wine/wine/windows/
        OUTPUT: ./vlc-4.0.0-dev

.unity-win-common:
    image:
        name: $VLC_WIN_LLVM_IMAGE
    dependencies:
        - libvlc-x86_64
    tags:
        - docker
        - amd64
    stage: build-unity-plugin
    script:
        - 7z x ./nightlies/vlc-4.0.0-dev-win64.7z -o./build
        - mkdir -p Assets/VLCUnity/Plugins/x86_64
        - cp -R ./build/vlc-4.0.0-dev/{libvlc.dll,libvlccore.dll,hrtfs,lua,plugins} Assets/VLCUnity/Plugins/x86_64
        - cp -r ./build/vlc-4.0.0-dev/sdk/ PluginSource/
        - ./build.sh -r ${ARGS_TRIAL}
    after_script:
        - cp Assets/VLCUnity/Plugins/x86_64/VLCUnityPlugin.dll nightlies
    artifacts:
        paths:
            - nightlies/*
        expire_in: 2 weeks

libvlc-x86_64-debug:
    extends: .libvlc-win-common
    image:
        name: $VLC_WIN_LLVM_IMAGE
    variables:
        ARGS: -c -z -d -x -a x86_64
        ARTIFACT: vlc-4.0.0-dev-win64-debug.7z
        BUILD_FOLDER: win64

libvlc-x86_64:
    extends: .libvlc-win-common
    image:
        name: $VLC_WIN_LLVM_IMAGE
    variables:
        ARGS: -c -z -r -x -a x86_64 -i nope
        ARTIFACT: vlc-4.0.0-dev-win64.7z
        BUILD_FOLDER: win64

libvlc-uwp64-llvm:
    extends: .libvlc-win-common
    image:
        name: $VLC_UWP_LLVM_IMAGE
    variables:
        ARGS: -w -u -c -z -r -x -a x86_64 -i nope
        ARTIFACT: vlc-4.0.0-dev-win64.7z
        BUILD_FOLDER: win64-uwp

libvlc-uwp64-llvm-debug:
    extends: .libvlc-win-common
    image:
        name: $VLC_UWP_LLVM_IMAGE
    variables:
        ARGS: -w -u -c -z -d -x -a x86_64
        ARTIFACT: vlc-4.0.0-dev-win64-debug.7z
        BUILD_FOLDER: win64-uwp

unity-plugin-windows:
    extends: .unity-win-common

unity-plugin-windows-trial:
    extends: .unity-win-common
    variables: *variables-trial

# LibVLCSharp

libvlcsharp-unity:
    image:
        name: $VLC_DEBIAN_IMAGE
    tags:
        - docker
        - amd64
    stage: build-libvlc
    script:
        - wget https://download.visualstudio.microsoft.com/download/pr/17b6759f-1af0-41bc-ab12-209ba0377779/e8d02195dbf1434b940e0f05ae086453/dotnet-sdk-6.0.100-linux-x64.tar.gz
        - mkdir -p $HOME/dotnet && tar zxf dotnet-sdk-6.0.100-linux-x64.tar.gz -C $HOME/dotnet
        - export DOTNET_ROOT=$HOME/dotnet
        - export PATH=$PATH:$HOME/dotnet
        - dotnet --version
        - mkdir tmp && cd tmp && git clone https://code.videolan.org/videolan/LibVLCSharp lvs
        - cd lvs
        - git checkout -f master
        - dotnet publish src/LibVLCSharp/LibVLCSharp.csproj /p:UNITY=true -c Release
    after_script:
        - mkdir nightlies
        - cp -r tmp/lvs/src/LibVLCSharp/bin/Release/netstandard2.0/publish nightlies
    artifacts:
        paths:
            - nightlies/*
        expire_in: 2 weeks
